import * as internal from '../sdk/internal';
export import StructureVersionInfo = internal.StructureVersionInfo;
import { projects } from './projects';
export declare namespace enumerations {
    /**
     * Interfaces and instance classes for types from the Mendix sub meta model `Enumerations`.
     */
    interface ICondition extends internal.IElement {
        model: IModel;
        load(): Condition;
        load(callback: (element: Condition) => void): any;
    }
    class Condition extends internal.Element implements ICondition {
        model: IModel;
        static typeName: string;
        private __attributeValue;
        attributeValue: string;
        private __editableVisible;
        editableVisible: boolean;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static create(model: IModel): Condition;
        _initializeDefaultProperties(): void;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Enumerations relevant section in reference guide}
     */
    interface IEnumeration extends projects.IDocument {
        model: IModel;
        container: projects.IFolderBase;
        load(): Enumeration;
        load(callback: (element: Enumeration) => void): any;
        values: internal.IList<IEnumerationValue>;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Enumerations relevant section in reference guide}
     */
    class Enumeration extends projects.Document implements IEnumeration {
        model: IModel;
        static typeName: string;
        container: projects.FolderBase;
        private __values;
        values: internal.IList<EnumerationValue>;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, container: projects.IFolderBase);
        /**
         * Creates a new Enumeration unit in the SDK and on the server.
         * Expects one argument, a projects.FolderBase in which this unit is contained.
         */
        static createIn(container: projects.IFolderBase): Enumeration;
        _initializeDefaultProperties(): void;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Enumeration+Values relevant section in reference guide}
     */
    interface IEnumerationValue extends internal.IElement {
        model: IModel;
        container: IEnumeration;
        load(): EnumerationValue;
        load(callback: (element: EnumerationValue) => void): any;
        name: string;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Enumeration+Values relevant section in reference guide}
     */
    class EnumerationValue extends internal.Element implements IEnumerationValue {
        model: IModel;
        static typeName: string;
        container: Enumeration;
        private __name;
        name: string;
        private __caption;
        caption: texts.Text;
        private __image;
        image: images.IImage;
        imageQualifiedName: string;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static createIn(container: Enumeration): EnumerationValue;
        static create(model: IModel): EnumerationValue;
        _initializeDefaultProperties(): void;
    }
}
import { images } from './images';
import { texts } from './texts';
import { IModel } from './base-model';
