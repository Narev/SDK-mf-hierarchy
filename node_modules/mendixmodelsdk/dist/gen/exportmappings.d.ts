import * as internal from '../sdk/internal';
export import StructureVersionInfo = internal.StructureVersionInfo;
import { mappings } from './mappings';
export declare namespace exportmappings {
    /**
     * Interfaces and instance classes for types from the Mendix sub meta model `ExportMappings`.
     */
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Domain-to-XML+Mappings relevant section in reference guide}
     */
    interface IExportMapping extends mappings.IMappingDocument {
        model: IModel;
        container: projects.IFolderBase;
        load(): ExportMapping;
        load(callback: (element: ExportMapping) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Domain-to-XML+Mappings relevant section in reference guide}
     */
    class ExportMapping extends mappings.MappingDocument implements IExportMapping {
        model: IModel;
        static typeName: string;
        container: projects.FolderBase;
        private __parameterName;
        parameterName: string;
        private __parameterTypeName;
        parameterTypeName: string;
        private __isHeader;
        isHeader: boolean;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, container: projects.IFolderBase);
        /**
         * Creates a new ExportMapping unit in the SDK and on the server.
         * Expects one argument, a projects.FolderBase in which this unit is contained.
         */
        static createIn(container: projects.IFolderBase): ExportMapping;
        _initializeDefaultProperties(): void;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Map+entity+to+element relevant section in reference guide}
     */
    interface IExportObjectMappingElement extends mappings.IObjectMappingElement {
        model: IModel;
        load(): ExportObjectMappingElement;
        load(callback: (element: ExportObjectMappingElement) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Map+entity+to+element relevant section in reference guide}
     */
    class ExportObjectMappingElement extends mappings.ObjectMappingElement implements IExportObjectMappingElement {
        model: IModel;
        static typeName: string;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static create(model: IModel): ExportObjectMappingElement;
        _initializeDefaultProperties(): void;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Map+entity+to+element relevant section in reference guide}
     */
    interface IExportValueMappingElement extends mappings.IValueMappingElement {
        model: IModel;
        container: mappings.IObjectMappingElement;
        load(): ExportValueMappingElement;
        load(callback: (element: ExportValueMappingElement) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Map+entity+to+element relevant section in reference guide}
     */
    class ExportValueMappingElement extends mappings.ValueMappingElement implements IExportValueMappingElement {
        model: IModel;
        static typeName: string;
        container: mappings.ObjectMappingElement;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static createIn(container: mappings.ObjectMappingElement): ExportValueMappingElement;
        static create(model: IModel): ExportValueMappingElement;
        _initializeDefaultProperties(): void;
    }
}
import { projects } from './projects';
import { IModel } from './base-model';
