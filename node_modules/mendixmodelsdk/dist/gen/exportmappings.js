var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var internal = require('../sdk/internal');
exports.StructureVersionInfo = internal.StructureVersionInfo;
var mappings_1 = require('./mappings');
var exportmappings;
(function (exportmappings) {
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Domain-to-XML+Mappings relevant section in reference guide}
     */
    var ExportMapping = (function (_super) {
        __extends(ExportMapping, _super);
        function ExportMapping(model, typeName, id, isPartial, container) {
            _super.call(this, model, typeName, id, isPartial, container);
            this.__parameterName = new internal.PrimitiveProperty(ExportMapping, this, "parameterName", "", internal.PrimitiveTypeEnum.String);
            this.__parameterTypeName = new internal.PrimitiveProperty(ExportMapping, this, "parameterTypeName", "", internal.PrimitiveTypeEnum.String);
            this.__isHeader = new internal.PrimitiveProperty(ExportMapping, this, "isHeader", false, internal.PrimitiveTypeEnum.Boolean);
            this._containmentName = "documents";
        }
        Object.defineProperty(ExportMapping.prototype, "parameterName", {
            get: function () { return this.__parameterName.get(); },
            set: function (newValue) { this.__parameterName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ExportMapping.prototype, "parameterTypeName", {
            get: function () { return this.__parameterTypeName.get(); },
            set: function (newValue) { this.__parameterTypeName.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ExportMapping.prototype, "isHeader", {
            get: function () { return this.__isHeader.get(); },
            set: function (newValue) { this.__isHeader.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates a new ExportMapping unit in the SDK and on the server.
         * Expects one argument, a projects.FolderBase in which this unit is contained.
         */
        ExportMapping.createIn = function (container) {
            return internal.instancehelpers.createUnit(container, ExportMapping);
        };
        ExportMapping.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        ExportMapping.typeName = "ExportMappings$ExportMapping";
        ExportMapping.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.ModelUnit);
        return ExportMapping;
    })(mappings_1.mappings.MappingDocument);
    exportmappings.ExportMapping = ExportMapping;
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Map+entity+to+element relevant section in reference guide}
     */
    var ExportObjectMappingElement = (function (_super) {
        __extends(ExportObjectMappingElement, _super);
        function ExportObjectMappingElement(model, typeName, id, isPartial, unit, container) {
            _super.call(this, model, typeName, id, isPartial, unit, container);
            if (arguments.length < 4)
                throw new Error("new ExportObjectMappingElement() cannot be invoked directly, please use 'model.exportmappings.createExportObjectMappingElement()'");
        }
        /*
         * Creates and returns a new ExportObjectMappingElement instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        ExportObjectMappingElement.create = function (model) {
            return internal.instancehelpers.createElement(model, ExportObjectMappingElement);
        };
        ExportObjectMappingElement.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        ExportObjectMappingElement.typeName = "ExportMappings$ExportObjectMappingElement";
        ExportObjectMappingElement.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return ExportObjectMappingElement;
    })(mappings_1.mappings.ObjectMappingElement);
    exportmappings.ExportObjectMappingElement = ExportObjectMappingElement;
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Map+entity+to+element relevant section in reference guide}
     */
    var ExportValueMappingElement = (function (_super) {
        __extends(ExportValueMappingElement, _super);
        function ExportValueMappingElement(model, typeName, id, isPartial, unit, container) {
            _super.call(this, model, typeName, id, isPartial, unit, container);
            if (arguments.length < 4)
                throw new Error("new ExportValueMappingElement() cannot be invoked directly, please use 'model.exportmappings.createExportValueMappingElement()'");
        }
        /*
         * Creates and returns a new ExportValueMappingElement instance in the SDK and on the server.
         * The new ExportValueMappingElement will be automatically stored in the 'children' property of the parent mappings.ObjectMappingElement element passed as argument.
         */
        ExportValueMappingElement.createIn = function (container) {
            return internal.instancehelpers.createElement(container, ExportValueMappingElement, "children", true);
        };
        /*
         * Creates and returns a new ExportValueMappingElement instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        ExportValueMappingElement.create = function (model) {
            return internal.instancehelpers.createElement(model, ExportValueMappingElement);
        };
        ExportValueMappingElement.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        ExportValueMappingElement.typeName = "ExportMappings$ExportValueMappingElement";
        ExportValueMappingElement.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return ExportValueMappingElement;
    })(mappings_1.mappings.ValueMappingElement);
    exportmappings.ExportValueMappingElement = ExportValueMappingElement;
})(exportmappings = exports.exportmappings || (exports.exportmappings = {}));
