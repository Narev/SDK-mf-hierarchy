import * as internal from '../sdk/internal';
export import StructureVersionInfo = internal.StructureVersionInfo;
import { projects } from './projects';
export declare namespace navigation {
    class DeviceType extends internal.IEnum {
        protected qualifiedTsTypeName: string;
        static Desktop: DeviceType;
        static Tablet: DeviceType;
        static Phone: DeviceType;
    }
    class ProfileType extends internal.IEnum {
        protected qualifiedTsTypeName: string;
        static Desktop: ProfileType;
        static Tablet: ProfileType;
        static Phone: ProfileType;
        static OfflinePhone: ProfileType;
    }
    /**
     * Interfaces and instance classes for types from the Mendix sub meta model `Navigation`.
     */
    interface IHomePageBase extends internal.IElement {
        model: IModel;
        container: INavigationProfile;
        load(): HomePageBase;
        load(callback: (element: HomePageBase) => void): any;
    }
    /**
     * Warning: this class represents an abstract and non-instantiable concept in the meta model.
     * You should _not_ try to instantiate this class directly, but instantiate one of its concrete/non-abstract sub classes instead.
     * Instantiating this class is possible in pure JavaScript, but there's no guarantee the result will be at all useful.
     */
    abstract class HomePageBase extends internal.Element implements IHomePageBase {
        model: IModel;
        static typeName: string;
        container: NavigationProfile;
        private __page;
        page: pages.IPage;
        pageQualifiedName: string;
        private __microflow;
        microflow: microflows.IMicroflow;
        microflowQualifiedName: string;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        _initializeDefaultProperties(): void;
    }
    interface IHomePage extends IHomePageBase {
        model: IModel;
        container: INavigationProfile;
        load(): HomePage;
        load(callback: (element: HomePage) => void): any;
    }
    class HomePage extends HomePageBase implements IHomePage {
        model: IModel;
        static typeName: string;
        container: NavigationProfile;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static createIn(container: NavigationProfile): HomePage;
        static create(model: IModel): HomePage;
        _initializeDefaultProperties(): void;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Navigation relevant section in reference guide}
     */
    interface INavigationDocument extends projects.IProjectDocument {
        model: IModel;
        container: projects.IProject;
        load(): NavigationDocument;
        load(callback: (element: NavigationDocument) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Navigation relevant section in reference guide}
     */
    class NavigationDocument extends projects.ProjectDocument implements INavigationDocument {
        model: IModel;
        static typeName: string;
        container: projects.Project;
        private __phoneProfile;
        phoneProfile: NavigationProfile;
        private __tabletProfile;
        tabletProfile: NavigationProfile;
        private __desktopProfile;
        desktopProfile: NavigationProfile;
        private __offlinePhoneProfile;
        offlinePhoneProfile: NavigationProfile;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, container: projects.IProject);
        /**
         * Creates a new NavigationDocument unit in the SDK and on the server.
         * Expects one argument, a projects.Project in which this unit is contained.
         */
        static createIn(container: projects.IProject): NavigationDocument;
        _initializeDefaultProperties(): void;
    }
    interface INavigationProfile extends internal.IElement {
        model: IModel;
        container: INavigationDocument;
        load(): NavigationProfile;
        load(callback: (element: NavigationProfile) => void): any;
    }
    class NavigationProfile extends internal.Element implements INavigationProfile {
        model: IModel;
        static typeName: string;
        container: NavigationDocument;
        private __enabled;
        enabled: boolean;
        private __homePage;
        homePage: HomePage;
        private __roleBasedHomePages;
        roleBasedHomePages: internal.IList<RoleBasedHomePage>;
        private __applicationTitle;
        applicationTitle: string;
        private __menuItemCollection;
        menuItemCollection: menus.MenuItemCollection;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static createIn(container: NavigationDocument): NavigationProfile;
        static create(model: IModel): NavigationProfile;
        _initializeDefaultProperties(): void;
    }
    interface IRoleBasedHomePage extends IHomePageBase {
        model: IModel;
        container: INavigationProfile;
        load(): RoleBasedHomePage;
        load(callback: (element: RoleBasedHomePage) => void): any;
    }
    class RoleBasedHomePage extends HomePageBase implements IRoleBasedHomePage {
        model: IModel;
        static typeName: string;
        container: NavigationProfile;
        private __userRole;
        userRole: security.IUserRole;
        userRoleQualifiedName: string;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static createIn(container: NavigationProfile): RoleBasedHomePage;
        static create(model: IModel): RoleBasedHomePage;
        _initializeDefaultProperties(): void;
    }
}
import { menus } from './menus';
import { microflows } from './microflows';
import { pages } from './pages';
import { security } from './security';
import { IModel } from './base-model';
