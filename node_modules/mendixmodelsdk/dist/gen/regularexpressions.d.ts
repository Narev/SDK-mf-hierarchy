import * as internal from '../sdk/internal';
export import StructureVersionInfo = internal.StructureVersionInfo;
import { projects } from './projects';
export declare namespace regularexpressions {
    /**
     * Interfaces and instance classes for types from the Mendix sub meta model `RegularExpressions`.
     */
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Regular+Expressions relevant section in reference guide}
     */
    interface IRegularExpression extends projects.IDocument {
        model: IModel;
        container: projects.IFolderBase;
        load(): RegularExpression;
        load(callback: (element: RegularExpression) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Regular+Expressions relevant section in reference guide}
     */
    class RegularExpression extends projects.Document implements IRegularExpression {
        model: IModel;
        static typeName: string;
        container: projects.FolderBase;
        private __regEx;
        regEx: string;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, container: projects.IFolderBase);
        /**
         * Creates a new RegularExpression unit in the SDK and on the server.
         * Expects one argument, a projects.FolderBase in which this unit is contained.
         */
        static createIn(container: projects.IFolderBase): RegularExpression;
        _initializeDefaultProperties(): void;
    }
}
import { IModel } from './base-model';
