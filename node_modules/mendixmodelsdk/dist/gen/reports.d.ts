import * as internal from '../sdk/internal';
export import StructureVersionInfo = internal.StructureVersionInfo;
import { pages } from './pages';
export declare namespace reports {
    class AggregateFunctionEnum extends internal.IEnum {
        protected qualifiedTsTypeName: string;
        static Sum: AggregateFunctionEnum;
        static Average: AggregateFunctionEnum;
        static Count: AggregateFunctionEnum;
        static Minimum: AggregateFunctionEnum;
        static Maximum: AggregateFunctionEnum;
    }
    class ColumnFormat extends internal.IEnum {
        protected qualifiedTsTypeName: string;
        static Default: ColumnFormat;
        static MonthName: ColumnFormat;
        static WeekdayName: ColumnFormat;
    }
    class ChartType extends internal.IEnum {
        protected qualifiedTsTypeName: string;
        static VerticalBars: ChartType;
        static VerticalBars3D: ChartType;
        static HorizontalBars: ChartType;
        static Lines: ChartType;
        static Area: ChartType;
    }
    class AspectRatio extends internal.IEnum {
        protected qualifiedTsTypeName: string;
        static SixteenToNine: AspectRatio;
        static ThreeToTwo: AspectRatio;
        static FourToThree: AspectRatio;
        static OneToOne: AspectRatio;
        static ThreeToFour: AspectRatio;
        static TwoToThree: AspectRatio;
        static NineToSixteen: AspectRatio;
    }
    class DateRangeFieldEnum extends internal.IEnum {
        protected qualifiedTsTypeName: string;
        static Year: DateRangeFieldEnum;
        static Month: DateRangeFieldEnum;
        static Week: DateRangeFieldEnum;
        static Period: DateRangeFieldEnum;
        static Quarter: DateRangeFieldEnum;
    }
    /**
     * Interfaces and instance classes for types from the Mendix sub meta model `Reports`.
     */
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Report+Widgets relevant section in reference guide}
     */
    interface IReportWidget extends pages.IWidget {
        model: IModel;
        load(): ReportWidget;
        load(callback: (element: ReportWidget) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Report+Widgets relevant section in reference guide}
     *
     * Warning: this class represents an abstract and non-instantiable concept in the meta model.
     * You should _not_ try to instantiate this class directly, but instantiate one of its concrete/non-abstract sub classes instead.
     * Instantiating this class is possible in pure JavaScript, but there's no guarantee the result will be at all useful.
     */
    abstract class ReportWidget extends pages.Widget implements IReportWidget {
        model: IModel;
        static typeName: string;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        _initializeDefaultProperties(): void;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Basic+Reports relevant section in reference guide}
     */
    interface IBasicReport extends IReportWidget {
        model: IModel;
        load(): BasicReport;
        load(callback: (element: BasicReport) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Basic+Reports relevant section in reference guide}
     */
    class BasicReport extends ReportWidget implements IBasicReport {
        model: IModel;
        static typeName: string;
        private __dataSet;
        dataSet: datasets.IDataSet;
        dataSetQualifiedName: string;
        private __columns;
        columns: internal.IList<BasicReportColumn>;
        private __aggregates;
        aggregates: internal.IList<BasicReportAggregate>;
        private __showExportButton;
        showExportButton: boolean;
        private __zoomInfo;
        zoomInfo: ReportZoomInfo;
        private __isPagingEnabled;
        isPagingEnabled: boolean;
        private __pageSize;
        pageSize: number;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static create(model: IModel): BasicReport;
        _initializeDefaultProperties(): void;
    }
    interface IBasicReportAggregate extends internal.IElement {
        model: IModel;
        container: IBasicReport;
        load(): BasicReportAggregate;
        load(callback: (element: BasicReportAggregate) => void): any;
    }
    class BasicReportAggregate extends internal.Element implements IBasicReportAggregate {
        model: IModel;
        static typeName: string;
        container: BasicReport;
        private __caption;
        caption: texts.Text;
        private __aggregateFunction;
        aggregateFunction: AggregateFunctionEnum;
        private __applicablePerColumn;
        applicablePerColumn: internal.IList<boolean>;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static createIn(container: BasicReport): BasicReportAggregate;
        static create(model: IModel): BasicReportAggregate;
        _initializeDefaultProperties(): void;
    }
    interface IBasicReportColumn extends internal.IElement {
        model: IModel;
        container: IBasicReport;
        load(): BasicReportColumn;
        load(callback: (element: BasicReportColumn) => void): any;
    }
    class BasicReportColumn extends internal.Element implements IBasicReportColumn {
        model: IModel;
        static typeName: string;
        container: BasicReport;
        private __caption;
        caption: texts.Text;
        private __dataSetColumnName;
        dataSetColumnName: string;
        private __width;
        width: number;
        private __alignment;
        alignment: pages.AlignmentEnum;
        private __format;
        format: ColumnFormat;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static createIn(container: BasicReport): BasicReportColumn;
        static create(model: IModel): BasicReportColumn;
        _initializeDefaultProperties(): void;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Report+Button relevant section in reference guide}
     */
    interface IReportButton extends pages.IWidget {
        model: IModel;
        load(): ReportButton;
        load(callback: (element: ReportButton) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Report+Button relevant section in reference guide}
     */
    class ReportButton extends pages.Widget implements IReportButton {
        model: IModel;
        static typeName: string;
        private __caption;
        caption: texts.Text;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static create(model: IModel): ReportButton;
        _initializeDefaultProperties(): void;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Report+Chart relevant section in reference guide}
     */
    interface IReportChart extends pages.IWidget {
        model: IModel;
        load(): ReportChart;
        load(callback: (element: ReportChart) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Report+Chart relevant section in reference guide}
     */
    class ReportChart extends pages.Widget implements IReportChart {
        model: IModel;
        static typeName: string;
        private __dataSet;
        dataSet: datasets.IDataSet;
        dataSetQualifiedName: string;
        private __type;
        type: ChartType;
        private __seriess;
        seriess: internal.IList<ReportChartSeries>;
        private __xAxisCaption;
        xAxisCaption: texts.Text;
        private __yAxisCaption;
        yAxisCaption: texts.Text;
        private __xAxisColumn;
        xAxisColumn: string;
        private __xAxisFormat;
        xAxisFormat: ColumnFormat;
        private __yAxisPrecision;
        yAxisPrecision: number;
        private __yAxisUseMinMax;
        yAxisUseMinMax: boolean;
        private __yAxisMinimum;
        yAxisMinimum: number;
        private __yAxisMaximum;
        yAxisMaximum: number;
        private __aspectRatio;
        aspectRatio: AspectRatio;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static create(model: IModel): ReportChart;
        _initializeDefaultProperties(): void;
    }
    interface IReportChartSeries extends internal.IElement {
        model: IModel;
        container: IReportChart;
        load(): ReportChartSeries;
        load(callback: (element: ReportChartSeries) => void): any;
    }
    class ReportChartSeries extends internal.Element implements IReportChartSeries {
        model: IModel;
        static typeName: string;
        container: ReportChart;
        private __caption;
        caption: texts.Text;
        private __dataSetColumn;
        dataSetColumn: string;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static createIn(container: ReportChart): ReportChartSeries;
        static create(model: IModel): ReportChartSeries;
        _initializeDefaultProperties(): void;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Date+Range+Field relevant section in reference guide}
     */
    interface IReportDateRangeField extends internal.IElement {
        model: IModel;
        container: IReportDateRangeSelector;
        load(): ReportDateRangeField;
        load(callback: (element: ReportDateRangeField) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Date+Range+Field relevant section in reference guide}
     */
    class ReportDateRangeField extends internal.Element implements IReportDateRangeField {
        model: IModel;
        static typeName: string;
        container: ReportDateRangeSelector;
        private __caption;
        caption: texts.Text;
        private __type;
        type: DateRangeFieldEnum;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static createIn(container: ReportDateRangeSelector): ReportDateRangeField;
        static create(model: IModel): ReportDateRangeField;
        _initializeDefaultProperties(): void;
    }
    interface IReportParameter extends pages.IWidget {
        model: IModel;
        load(): ReportParameter;
        load(callback: (element: ReportParameter) => void): any;
    }
    /**
     * Warning: this class represents an abstract and non-instantiable concept in the meta model.
     * You should _not_ try to instantiate this class directly, but instantiate one of its concrete/non-abstract sub classes instead.
     * Instantiating this class is possible in pure JavaScript, but there's no guarantee the result will be at all useful.
     */
    abstract class ReportParameter extends pages.Widget implements IReportParameter {
        model: IModel;
        static typeName: string;
        private __parameterName;
        parameterName: string;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        _initializeDefaultProperties(): void;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Date+Range+Selector relevant section in reference guide}
     */
    interface IReportDateRangeSelector extends IReportParameter {
        model: IModel;
        load(): ReportDateRangeSelector;
        load(callback: (element: ReportDateRangeSelector) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Date+Range+Selector relevant section in reference guide}
     */
    class ReportDateRangeSelector extends ReportParameter implements IReportDateRangeSelector {
        model: IModel;
        static typeName: string;
        private __fields;
        fields: internal.IList<ReportDateRangeField>;
        private __minYear;
        minYear: number;
        private __maxYear;
        maxYear: number;
        private __fieldsPerRow;
        fieldsPerRow: number;
        private __showFromToRange;
        showFromToRange: boolean;
        private __fromCaption;
        fromCaption: texts.Text;
        private __toCaption;
        toCaption: texts.Text;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static create(model: IModel): ReportDateRangeSelector;
        _initializeDefaultProperties(): void;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Drop+Down relevant section in reference guide}
     */
    interface IReportDropDown extends IReportParameter {
        model: IModel;
        load(): ReportDropDown;
        load(callback: (element: ReportDropDown) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Drop+Down relevant section in reference guide}
     */
    class ReportDropDown extends ReportParameter implements IReportDropDown {
        model: IModel;
        static typeName: string;
        private __attribute;
        attribute: domainmodels.IAttribute;
        attributeQualifiedName: string;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static create(model: IModel): ReportDropDown;
        _initializeDefaultProperties(): void;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Report+Pane relevant section in reference guide}
     */
    interface IReportPane extends pages.IWidget {
        model: IModel;
        load(): ReportPane;
        load(callback: (element: ReportPane) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Report+Pane relevant section in reference guide}
     */
    class ReportPane extends pages.Widget implements IReportPane {
        model: IModel;
        static typeName: string;
        private __parameterWidget;
        parameterWidget: pages.Widget;
        private __reportWidget;
        reportWidget: pages.Widget;
        private __generateOnLoad;
        generateOnLoad: boolean;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static create(model: IModel): ReportPane;
        _initializeDefaultProperties(): void;
    }
    interface IReportZoomInfo extends internal.IElement {
        model: IModel;
        container: IBasicReport;
        load(): ReportZoomInfo;
        load(callback: (element: ReportZoomInfo) => void): any;
    }
    class ReportZoomInfo extends internal.Element implements IReportZoomInfo {
        model: IModel;
        static typeName: string;
        container: BasicReport;
        private __targetPage;
        targetPage: pages.IPage;
        targetPageQualifiedName: string;
        private __mappings;
        mappings: internal.IList<ReportZoomMapping>;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static createIn(container: BasicReport): ReportZoomInfo;
        static create(model: IModel): ReportZoomInfo;
        _initializeDefaultProperties(): void;
    }
    interface IReportZoomMapping extends internal.IElement {
        model: IModel;
        container: IReportZoomInfo;
        load(): ReportZoomMapping;
        load(callback: (element: ReportZoomMapping) => void): any;
    }
    class ReportZoomMapping extends internal.Element implements IReportZoomMapping {
        model: IModel;
        static typeName: string;
        container: ReportZoomInfo;
        private __targetParameterName;
        targetParameterName: string;
        private __sourceReportColumnName;
        sourceReportColumnName: string;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static createIn(container: ReportZoomInfo): ReportZoomMapping;
        static create(model: IModel): ReportZoomMapping;
        _initializeDefaultProperties(): void;
    }
}
import { datasets } from './datasets';
import { domainmodels } from './domainmodels';
import { texts } from './texts';
import { IModel } from './base-model';
