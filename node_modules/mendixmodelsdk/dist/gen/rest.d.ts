import * as internal from '../sdk/internal';
export import StructureVersionInfo = internal.StructureVersionInfo;
import { projects } from './projects';
import { webservices } from './webservices';
export declare namespace rest {
    /**
     * Interfaces and instance classes for types from the Mendix sub meta model `Rest`.
     */
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Published+OData+Services relevant section in reference guide}
     */
    interface IPublishedRestServiceBase extends projects.IDocument {
        model: IModel;
        container: projects.IFolderBase;
        load(): PublishedRestServiceBase;
        load(callback: (element: PublishedRestServiceBase) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Published+OData+Services relevant section in reference guide}
     *
     * Warning: this class represents an abstract and non-instantiable concept in the meta model.
     * You should _not_ try to instantiate this class directly, but instantiate one of its concrete/non-abstract sub classes instead.
     * Instantiating this class is possible in pure JavaScript, but there's no guarantee the result will be at all useful.
     */
    abstract class PublishedRestServiceBase extends projects.Document implements IPublishedRestServiceBase {
        model: IModel;
        static typeName: string;
        container: projects.FolderBase;
        private __resources;
        resources: internal.IList<PublishedRestResource>;
        private __namespace;
        namespace: string;
        private __path;
        path: string;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, container: projects.IFolderBase);
        _initializeDefaultProperties(): void;
    }
    interface IPublishedODataService extends IPublishedRestServiceBase {
        model: IModel;
        container: projects.IFolderBase;
        load(): PublishedODataService;
        load(callback: (element: PublishedODataService) => void): any;
    }
    class PublishedODataService extends PublishedRestServiceBase implements IPublishedODataService {
        model: IModel;
        static typeName: string;
        container: projects.FolderBase;
        private __allowedModuleRoles;
        allowedModuleRoles: internal.IList<security.IModuleRole>;
        allowedModuleRolesQualifiedNames: string[];
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, container: projects.IFolderBase);
        /**
         * Creates a new PublishedODataService unit in the SDK and on the server.
         * Expects one argument, a projects.FolderBase in which this unit is contained.
         */
        static createIn(container: projects.IFolderBase): PublishedODataService;
        _initializeDefaultProperties(): void;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Published+OData+resource relevant section in reference guide}
     */
    interface IPublishedRestResource extends webservices.IPublishedResource {
        model: IModel;
        container: IPublishedRestServiceBase;
        load(): PublishedRestResource;
        load(callback: (element: PublishedRestResource) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Published+OData+resource relevant section in reference guide}
     */
    class PublishedRestResource extends webservices.PublishedResource implements IPublishedRestResource {
        model: IModel;
        static typeName: string;
        container: PublishedRestServiceBase;
        private __path;
        path: string;
        private __usePaging;
        usePaging: boolean;
        private __pageSize;
        pageSize: number;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static createIn(container: PublishedRestServiceBase): PublishedRestResource;
        static create(model: IModel): PublishedRestResource;
        _initializeDefaultProperties(): void;
    }
    interface IPublishedRestService extends IPublishedRestServiceBase {
        model: IModel;
        container: projects.IFolderBase;
        load(): PublishedRestService;
        load(callback: (element: PublishedRestService) => void): any;
    }
    class PublishedRestService extends PublishedRestServiceBase implements IPublishedRestService {
        model: IModel;
        static typeName: string;
        container: projects.FolderBase;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, container: projects.IFolderBase);
        /**
         * Creates a new PublishedRestService unit in the SDK and on the server.
         * Expects one argument, a projects.FolderBase in which this unit is contained.
         */
        static createIn(container: projects.IFolderBase): PublishedRestService;
        _initializeDefaultProperties(): void;
    }
}
import { security } from './security';
import { IModel } from './base-model';
