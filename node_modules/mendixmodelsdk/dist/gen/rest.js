var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var internal = require('../sdk/internal');
exports.StructureVersionInfo = internal.StructureVersionInfo;
var projects_1 = require('./projects');
var webservices_1 = require('./webservices');
var rest;
(function (rest) {
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Published+OData+Services relevant section in reference guide}
     *
     * Warning: this class represents an abstract and non-instantiable concept in the meta model.
     * You should _not_ try to instantiate this class directly, but instantiate one of its concrete/non-abstract sub classes instead.
     * Instantiating this class is possible in pure JavaScript, but there's no guarantee the result will be at all useful.
     */
    var PublishedRestServiceBase = (function (_super) {
        __extends(PublishedRestServiceBase, _super);
        function PublishedRestServiceBase(model, typeName, id, isPartial, container) {
            _super.call(this, model, typeName, id, isPartial, container);
            this.__resources = new internal.PartListProperty(PublishedRestServiceBase, this, "resources", []);
            this.__namespace = new internal.PrimitiveProperty(PublishedRestServiceBase, this, "namespace", "", internal.PrimitiveTypeEnum.String);
            this.__path = new internal.PrimitiveProperty(PublishedRestServiceBase, this, "path", "", internal.PrimitiveTypeEnum.String);
            this._containmentName = "documents";
        }
        Object.defineProperty(PublishedRestServiceBase.prototype, "resources", {
            get: function () { return this.__resources.get(); },
            set: function (newValue) { this.__resources.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedRestServiceBase.prototype, "namespace", {
            get: function () { return this.__namespace.get(); },
            set: function (newValue) { this.__namespace.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedRestServiceBase.prototype, "path", {
            get: function () { return this.__path.get(); },
            set: function (newValue) { this.__path.set(newValue); },
            enumerable: true,
            configurable: true
        });
        PublishedRestServiceBase.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
            this.namespace = "DefaultNamespace";
        };
        PublishedRestServiceBase.typeName = "Rest$PublishedRestServiceBase";
        PublishedRestServiceBase.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.ModelUnit);
        return PublishedRestServiceBase;
    })(projects_1.projects.Document);
    rest.PublishedRestServiceBase = PublishedRestServiceBase;
    var PublishedODataService = (function (_super) {
        __extends(PublishedODataService, _super);
        function PublishedODataService(model, typeName, id, isPartial, container) {
            _super.call(this, model, typeName, id, isPartial, container);
            this.__allowedModuleRoles = new internal.ByNameReferenceListProperty(PublishedODataService, this, "allowedModuleRoles", [], "Security$ModuleRole");
            this._containmentName = "documents";
        }
        Object.defineProperty(PublishedODataService.prototype, "allowedModuleRoles", {
            get: function () { return this.__allowedModuleRoles.get(); },
            set: function (newValue) { this.__allowedModuleRoles.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedODataService.prototype, "allowedModuleRolesQualifiedNames", {
            get: function () { return this.__allowedModuleRoles.qualifiedNames(); },
            enumerable: true,
            configurable: true
        });
        /**
         * Creates a new PublishedODataService unit in the SDK and on the server.
         * Expects one argument, a projects.FolderBase in which this unit is contained.
         */
        PublishedODataService.createIn = function (container) {
            return internal.instancehelpers.createUnit(container, PublishedODataService);
        };
        PublishedODataService.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        PublishedODataService.typeName = "Rest$PublishedODataService";
        PublishedODataService.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.ModelUnit);
        return PublishedODataService;
    })(PublishedRestServiceBase);
    rest.PublishedODataService = PublishedODataService;
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Published+OData+resource relevant section in reference guide}
     */
    var PublishedRestResource = (function (_super) {
        __extends(PublishedRestResource, _super);
        function PublishedRestResource(model, typeName, id, isPartial, unit, container) {
            _super.call(this, model, typeName, id, isPartial, unit, container);
            this.__path = new internal.PrimitiveProperty(PublishedRestResource, this, "path", "", internal.PrimitiveTypeEnum.String);
            this.__usePaging = new internal.PrimitiveProperty(PublishedRestResource, this, "usePaging", false, internal.PrimitiveTypeEnum.Boolean);
            this.__pageSize = new internal.PrimitiveProperty(PublishedRestResource, this, "pageSize", 0, internal.PrimitiveTypeEnum.Integer);
            if (arguments.length < 4)
                throw new Error("new PublishedRestResource() cannot be invoked directly, please use 'model.rest.createPublishedRestResource()'");
        }
        Object.defineProperty(PublishedRestResource.prototype, "path", {
            get: function () { return this.__path.get(); },
            set: function (newValue) { this.__path.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedRestResource.prototype, "usePaging", {
            get: function () { return this.__usePaging.get(); },
            set: function (newValue) { this.__usePaging.set(newValue); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PublishedRestResource.prototype, "pageSize", {
            get: function () { return this.__pageSize.get(); },
            set: function (newValue) { this.__pageSize.set(newValue); },
            enumerable: true,
            configurable: true
        });
        /*
         * Creates and returns a new PublishedRestResource instance in the SDK and on the server.
         * The new PublishedRestResource will be automatically stored in the 'resources' property of the parent PublishedRestServiceBase element passed as argument.
         */
        PublishedRestResource.createIn = function (container) {
            return internal.instancehelpers.createElement(container, PublishedRestResource, "resources", true);
        };
        /*
         * Creates and returns a new PublishedRestResource instance in the SDK and on the server.
         * Expects one argument: the IModel object the instance will "live on".
         * After creation, assign or add this instance to a property that accepts this kind of objects.
         */
        PublishedRestResource.create = function (model) {
            return internal.instancehelpers.createElement(model, PublishedRestResource);
        };
        PublishedRestResource.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
            this.pageSize = 10000;
        };
        PublishedRestResource.typeName = "Rest$PublishedRestResource";
        PublishedRestResource.versionInfo = new exports.StructureVersionInfo({}, internal.StructureType.Element);
        return PublishedRestResource;
    })(webservices_1.webservices.PublishedResource);
    rest.PublishedRestResource = PublishedRestResource;
    var PublishedRestService = (function (_super) {
        __extends(PublishedRestService, _super);
        function PublishedRestService(model, typeName, id, isPartial, container) {
            _super.call(this, model, typeName, id, isPartial, container);
            this._containmentName = "documents";
        }
        /**
         * Creates a new PublishedRestService unit in the SDK and on the server.
         * Expects one argument, a projects.FolderBase in which this unit is contained.
         */
        PublishedRestService.createIn = function (container) {
            return internal.instancehelpers.createUnit(container, PublishedRestService);
        };
        PublishedRestService.prototype._initializeDefaultProperties = function () {
            _super.prototype._initializeDefaultProperties.call(this);
        };
        PublishedRestService.typeName = "Rest$PublishedRestService";
        PublishedRestService.versionInfo = new exports.StructureVersionInfo({
            "experimental": {
                "currentValue": true
            }
        }, internal.StructureType.ModelUnit);
        return PublishedRestService;
    })(PublishedRestServiceBase);
    rest.PublishedRestService = PublishedRestService;
})(rest = exports.rest || (exports.rest = {}));
