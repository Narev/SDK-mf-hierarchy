import * as internal from '../sdk/internal';
export import StructureVersionInfo = internal.StructureVersionInfo;
import { projects } from './projects';
export declare namespace texts {
    /**
     * Interfaces and instance classes for types from the Mendix sub meta model `Texts`.
     */
    interface ISystemText extends internal.IElement {
        model: IModel;
        container: ISystemTextCollection;
        load(): SystemText;
        load(callback: (element: SystemText) => void): any;
    }
    class SystemText extends internal.Element implements ISystemText {
        model: IModel;
        static typeName: string;
        container: SystemTextCollection;
        private __text;
        text: Text;
        private __key;
        key: string;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static createIn(container: SystemTextCollection): SystemText;
        static create(model: IModel): SystemText;
        _initializeDefaultProperties(): void;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/System+Texts relevant section in reference guide}
     */
    interface ISystemTextCollection extends projects.IProjectDocument {
        model: IModel;
        container: projects.IProject;
        load(): SystemTextCollection;
        load(callback: (element: SystemTextCollection) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/System+Texts relevant section in reference guide}
     */
    class SystemTextCollection extends projects.ProjectDocument implements ISystemTextCollection {
        model: IModel;
        static typeName: string;
        container: projects.Project;
        private __systemTexts;
        systemTexts: internal.IList<SystemText>;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, container: projects.IProject);
        /**
         * Creates a new SystemTextCollection unit in the SDK and on the server.
         * Expects one argument, a projects.Project in which this unit is contained.
         */
        static createIn(container: projects.IProject): SystemTextCollection;
        _initializeDefaultProperties(): void;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Translatable+Texts relevant section in reference guide}
     */
    interface IText extends internal.IElement {
        model: IModel;
        load(): Text;
        load(callback: (element: Text) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/Translatable+Texts relevant section in reference guide}
     */
    class Text extends internal.Element implements IText {
        model: IModel;
        static typeName: string;
        private __translations;
        translations: internal.IList<Translation>;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static create(model: IModel): Text;
        _initializeDefaultProperties(): void;
    }
    interface ITranslation extends internal.IElement {
        model: IModel;
        container: IText;
        load(): Translation;
        load(callback: (element: Translation) => void): any;
    }
    class Translation extends internal.Element implements ITranslation {
        model: IModel;
        static typeName: string;
        container: Text;
        private __languageCode;
        languageCode: string;
        private __text;
        text: string;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static createIn(container: Text): Translation;
        static create(model: IModel): Translation;
        _initializeDefaultProperties(): void;
    }
}
import { IModel } from './base-model';
