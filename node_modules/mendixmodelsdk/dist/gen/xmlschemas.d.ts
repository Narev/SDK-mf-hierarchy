import * as internal from '../sdk/internal';
export import StructureVersionInfo = internal.StructureVersionInfo;
import { projects } from './projects';
export declare namespace xmlschemas {
    class XmlPrimitiveType extends internal.IEnum {
        protected qualifiedTsTypeName: string;
        static Unknown: XmlPrimitiveType;
        static Boolean: XmlPrimitiveType;
        static Date: XmlPrimitiveType;
        static Time: XmlPrimitiveType;
        static DateTime: XmlPrimitiveType;
        static Decimal: XmlPrimitiveType;
        static Float: XmlPrimitiveType;
        static Integer: XmlPrimitiveType;
        static Binary: XmlPrimitiveType;
        static String: XmlPrimitiveType;
        static AnyType: XmlPrimitiveType;
    }
    /**
     * Interfaces and instance classes for types from the Mendix sub meta model `XmlSchemas`.
     */
    /**
     * See: {@link https://world.mendix.com/display/refguide6/XML+Schemas relevant section in reference guide}
     */
    interface IXmlSchema extends projects.IDocument {
        model: IModel;
        container: projects.IFolderBase;
        load(): XmlSchema;
        load(callback: (element: XmlSchema) => void): any;
    }
    /**
     * See: {@link https://world.mendix.com/display/refguide6/XML+Schemas relevant section in reference guide}
     */
    class XmlSchema extends projects.Document implements IXmlSchema {
        model: IModel;
        static typeName: string;
        container: projects.FolderBase;
        private __entries;
        entries: internal.IList<XmlSchemaEntry>;
        private __filePath;
        filePath: string;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, container: projects.IFolderBase);
        /**
         * Creates a new XmlSchema unit in the SDK and on the server.
         * Expects one argument, a projects.FolderBase in which this unit is contained.
         */
        static createIn(container: projects.IFolderBase): XmlSchema;
        _initializeDefaultProperties(): void;
    }
    interface IXmlSchemaEntry extends internal.IElement {
        model: IModel;
        load(): XmlSchemaEntry;
        load(callback: (element: XmlSchemaEntry) => void): any;
    }
    class XmlSchemaEntry extends internal.Element implements IXmlSchemaEntry {
        model: IModel;
        static typeName: string;
        private __targetNamespace;
        targetNamespace: string;
        private __location;
        location: string;
        private __contents;
        contents: string;
        private __localizedLocationFormat;
        localizedLocationFormat: string;
        private __localizedContentsFormat;
        localizedContentsFormat: string;
        static versionInfo: StructureVersionInfo;
        constructor(model: internal.AbstractModel, typeName: string, id: string, isPartial: boolean, unit: internal.ModelUnit, container: internal.AbstractElement);
        static create(model: IModel): XmlSchemaEntry;
        _initializeDefaultProperties(): void;
    }
}
import { IModel } from './base-model';
