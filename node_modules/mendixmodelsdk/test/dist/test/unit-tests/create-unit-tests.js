/// <reference path="../test-typings.d.ts"/>
var mendixmodelsdk_1 = require("mendixmodelsdk");
var sdk_client_helper_1 = require('../helpers/sdk-client-helper');
var file_helper_1 = require('../helpers/file-helper');
var chai_1 = require('chai');
describe('creating unit', function () {
    it('should create a domain model, folder and page', function (done) {
        var client = sdk_client_helper_1.createSdkClient();
        client.openWorkingCopy("1", function (model) {
            performAssertion(model, model.root, done);
        }, done);
    });
    it('should create a domain model, folder and page without fetching parents first', function (done) {
        var client = sdk_client_helper_1.createSdkClient();
        client.openWorkingCopy("1", function (model) {
            performAssertion(model, model.root, done);
        }, done);
    });
    function performAssertion(model, project, done) {
        chai_1.assert.equal(model.allDomainModels().length, 3);
        var module = mendixmodelsdk_1.projects.Module.createIn(project);
        module.name = "bla";
        var domainModel = mendixmodelsdk_1.domainmodels.DomainModel.createIn(module);
        chai_1.assert.equal(model.allDomainModels().length, 4);
        chai_1.assert.equal(model.allDomainModels().indexOf(domainModel) !== -1, true);
        var folder = mendixmodelsdk_1.projects.Folder.createIn(module);
        folder.name = "some folder";
        var page = mendixmodelsdk_1.pages.Page.createIn(folder);
        page.name = "firstpage";
        // check default value of Page.title:
        chai_1.assert.ok(page.title);
        chai_1.assert.equal(page.title.typeName, mendixmodelsdk_1.texts.Text.typeName);
        chai_1.assert.equal(page.title.translations.length, 1);
        var translation = page.title.translations[0];
        chai_1.assert.equal(translation.languageCode, "en_US");
        chai_1.assert.equal(translation.text, "Page Title");
        chai_1.assert.deepEqual(model.allPages().indexOf(page) !== -1, true);
        chai_1.assert.deepEqual(project.modules[3].folders[0].documents[0], page);
        model.closeConnection(function () {
            // verify the deltas created during the process:
            var deltas = model['_client'].deltas.slice();
            file_helper_1.writeJson('create-unit-deltas-non-prefetch.json', deltas);
            var superfluousDeltas = deltas.splice(10, 2);
            superfluousDeltas.forEach(function (delta) { return delete delta['elementId']; });
            var expectedSuperfluousDeltas = [
                {
                    "parentId": page.title.id,
                    "elementType": mendixmodelsdk_1.texts.Translation.typeName,
                    "parentPropertyName": "translations",
                    "deltaType": "CREATE_ELEMENT",
                    "unitId": page.id
                },
                {
                    "unitId": page.id,
                    "deltaType": "UPDATE_PROPERTY_VALUE",
                    "propertyName": "languageCode",
                    "mutator": {
                        "value": "en_US",
                        "mutatorType": "CHANGE"
                    }
                }
            ];
            chai_1.assert.deepEqual(deltas, expectedDeltas(module, project, domainModel, folder, page));
            chai_1.assert.deepEqual(superfluousDeltas, expectedSuperfluousDeltas);
            done();
        });
    }
    function expectedDeltas(module, project, domainModel, folder, page) {
        return [
            {
                "deltaType": "CREATE_UNIT",
                "unitId": module.id,
                "containerId": project.id,
                "containmentName": "modules",
                "contentType": mendixmodelsdk_1.projects.Module.typeName
            },
            {
                "unitId": module.id,
                "elementId": module.id,
                "deltaType": "UPDATE_PROPERTY_VALUE",
                "propertyName": "name",
                "mutator": {
                    "value": "bla",
                    "mutatorType": "CHANGE"
                }
            },
            {
                "deltaType": "CREATE_UNIT",
                "unitId": domainModel.id,
                "containerId": module.id,
                "containmentName": "domainModel",
                "contentType": mendixmodelsdk_1.domainmodels.DomainModel.typeName
            },
            {
                "deltaType": "CREATE_UNIT",
                "unitId": folder.id,
                "containerId": module.id,
                "containmentName": "folders",
                "contentType": mendixmodelsdk_1.projects.Folder.typeName
            },
            {
                "unitId": folder.id,
                "elementId": folder.id,
                "deltaType": "UPDATE_PROPERTY_VALUE",
                "propertyName": "name",
                "mutator": {
                    "value": "some folder",
                    "mutatorType": "CHANGE"
                }
            },
            {
                "deltaType": "CREATE_UNIT",
                "unitId": page.id,
                "containerId": folder.id,
                "containmentName": "documents",
                "contentType": mendixmodelsdk_1.pages.Page.typeName
            },
            {
                "unitId": page.id,
                "elementId": page.id,
                "deltaType": "UPDATE_PROPERTY_VALUE",
                "propertyName": "canvasWidth",
                "mutator": {
                    "value": 800,
                    "mutatorType": "CHANGE"
                }
            },
            {
                "unitId": page.id,
                "elementId": page.id,
                "deltaType": "UPDATE_PROPERTY_VALUE",
                "propertyName": "canvasHeight",
                "mutator": {
                    "value": 600,
                    "mutatorType": "CHANGE"
                }
            },
            {
                "parentId": page.id,
                "elementType": mendixmodelsdk_1.pages.LayoutCall.typeName,
                "parentPropertyName": "layoutCall",
                "deltaType": "CREATE_ELEMENT",
                "unitId": page.id,
                "elementId": page.layoutCall.id
            },
            {
                "parentId": page.id,
                "elementType": mendixmodelsdk_1.texts.Text.typeName,
                "parentPropertyName": "title",
                "deltaType": "CREATE_ELEMENT",
                "unitId": page.id,
                "elementId": page.title.id,
            },
            {
                "parentId": page.title.id,
                "elementType": mendixmodelsdk_1.texts.Translation.typeName,
                "parentPropertyName": "translations",
                "deltaType": "CREATE_ELEMENT",
                "unitId": page.id,
                "elementId": page.title.translations[0].id
            },
            {
                "unitId": page.id,
                "elementId": page.title.translations[0].id,
                "deltaType": "UPDATE_PROPERTY_VALUE",
                "propertyName": "languageCode",
                "mutator": {
                    "value": "en_US",
                    "mutatorType": "CHANGE"
                }
            },
            {
                "unitId": page.id,
                "elementId": page.title.translations[0].id,
                "deltaType": "UPDATE_PROPERTY_VALUE",
                "propertyName": "text",
                "mutator": {
                    "value": "Page Title",
                    "mutatorType": "CHANGE"
                }
            },
            {
                "unitId": page.id,
                "elementId": page.id,
                "deltaType": "UPDATE_PROPERTY_VALUE",
                "propertyName": "popupResizable",
                "mutator": {
                    "mutatorType": "CHANGE",
                    "value": true
                }
            },
            {
                "unitId": page.id,
                "elementId": page.id,
                "deltaType": "UPDATE_PROPERTY_VALUE",
                "propertyName": "name",
                "mutator": {
                    "value": "firstpage",
                    "mutatorType": "CHANGE"
                }
            }
        ];
    }
});
