/// <reference path="../test-typings.d.ts"/>
var mendixmodelsdk_1 = require("mendixmodelsdk");
var sdk_client_helper_1 = require('../helpers/sdk-client-helper');
var chai_1 = require('chai');
describe('model checks', function () {
    it('should be able to read all units', function (done) {
        sdk_client_helper_1.createSdkClient().openWorkingCopy("1", function (m) {
            m.allUnits().forEach(function (unit) {
                chai_1.assert.isTrue(unit instanceof mendixmodelsdk_1.ModelUnit || unit instanceof mendixmodelsdk_1.projects.Project || unit instanceof mendixmodelsdk_1.projects.FolderBase, "not a unit: " + unit.typeName);
            });
            chai_1.assert.equal(m.allUnits().length, 139);
            done();
        }, done);
    });
    it('should not be possible to mix up models', function (done) {
        sdk_client_helper_1.createSdkClient().openWorkingCopy("1", function (m1) {
            sdk_client_helper_1.createSdkClient().openWorkingCopy("1", function (m2) {
                var getFirstPopulatedDomainModel = function (m) { return m.allDomainModels().filter(function (dm) { return dm.entities.length > 0 && dm.associations.length > 0; })[0]; };
                var populatedDomainModel1 = getFirstPopulatedDomainModel(m1);
                var populatedDomainModel2 = getFirstPopulatedDomainModel(m2);
                chai_1.assert.ok(populatedDomainModel1);
                chai_1.assert.ok(populatedDomainModel2);
                populatedDomainModel1.load(function (dm1) {
                    populatedDomainModel2.load(function (dm2) {
                        chai_1.assert.ok(dm1.entities[0]);
                        chai_1.assert.ok(dm1.associations[0]);
                        /* test parts */
                        chai_1.assert.throw(function () {
                            dm1.entities.push(dm2.entities[0]);
                        }, "It is not possible to combine values coming from two different models");
                        /* test references */
                        chai_1.assert.throw(function () {
                            dm1.associations[0].child = dm2.entities[0];
                        }, "It is not possible to combine values coming from two different models");
                        done();
                    });
                });
            }, done);
        }, done);
    });
});
