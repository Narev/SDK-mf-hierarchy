/// <reference path="../test-typings.d.ts"/>
var sdk_client_helper_1 = require('../helpers/sdk-client-helper');
var chai_1 = require('chai');
describe('traverse', function () {
    it('only works for loaded documents', function (done) {
        var client = sdk_client_helper_1.createSdkClient();
        client.openWorkingCopy("1", function (model) {
            // not allowed, change inside model unit
            var dm = model.allDomainModels()[1];
            chai_1.assert.ok(dm.entities.length > 0);
            chai_1.assert.throws(function () { return dm.entities[0].traverse(function () { }); }, 'not fully loaded');
            chai_1.assert.throws(function () { return dm.entities[0].traverse(function () { }); }, "'DomainModels$Entity'");
            done();
        }, done);
    });
    it('should traverse all elements', function (done) {
        var client = sdk_client_helper_1.createSdkClient();
        client.openWorkingCopy("1", function (model) {
            var dm = model.allDomainModels()[1];
            chai_1.assert.ok(dm.entities.length > 0);
            dm.load(function (dm) {
                var elements = [];
                dm.entities[0].traverse(function (structure) { return elements.push(structure.typeName, structure['name'] || null); });
                chai_1.assert.deepEqual(elements, [
                    "DomainModels$Entity", "ExpenseType",
                    "DomainModels$NoGeneralization", null,
                    "DomainModels$Attribute", "Name",
                    "DomainModels$StringAttributeType", null,
                    "DomainModels$StoredValue", null,
                    "DomainModels$AccessRule", null,
                    "DomainModels$MemberAccess", null,
                    "DomainModels$AccessRule", null,
                    "DomainModels$MemberAccess", null
                ]);
                done();
            });
        }, done);
    });
});
