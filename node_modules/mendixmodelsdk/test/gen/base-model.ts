import {utils} from '../../src/sdk/utils';
import {IAbstractModel, AbstractModel} from '../../src/sdk/internal/abstract-model';

import {domainmodels_simple} from "./domainmodels_simple";

export interface IBaseModel extends IAbstractModel {
    allDomainModels(): domainmodels_simple.IDomainModel[];
    allProjects(): domainmodels_simple.IProject[];
}

/**
 * Class to find generated model units.
 */
export class BaseModel extends AbstractModel {
    public allDomainModels(): domainmodels_simple.IDomainModel[] {
        return <domainmodels_simple.IDomainModel[]> utils.flatten([
            "DomainModels_simple$DomainModel"
        ].map(typeName => super._unitInterfacesByType(typeName)));
    }
    public allProjects(): domainmodels_simple.IProject[] {
        return <domainmodels_simple.IProject[]> utils.flatten([
            "DomainModels_simple$Project"
        ].map(typeName => super._unitInterfacesByType(typeName)));
    }
}

export interface IByNameReferenceResolver {
}

/**
 * This interface exposes a single Mendix Model.
 * This interface contains the parts of the {@link Model} that are exposed through the SDK.
 */
export interface IModel extends IBaseModel, IByNameReferenceResolver {

    /**
     * The actual contents of the model.
     */
    root: domainmodels_simple.IProject;

}
